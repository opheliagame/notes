[
{
		"title": "Silence",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/poems/silence/",
		"content": "She is the bedsheet I wrap around myself in the morning\nThe only voice being the one in my head\nI like to breathe in before I breathe out\nJust be with her before anything else.\nWe were first introduced in class\n&quot;Hey, I'm the pin drop&quot;, she said\nI disliked by proxy\nShe, who was summoned by the teacher herself.\nOur relationship has grown since\nAn increase in understanding reciprocated with peace offerings\nAlone time with her was once like punishment\nNow it feels like self care.\nI'm sure you've seen her too\nUnsure of herself inside a court\nBegrudgingly in the parliament\nOr maybe uninvited in your own house.\nBut don't mistake her for being docile like I did\nShe has wrapped herself around my neck enough times for me to take note\nChallenging me to muster my sorry words\nScratching my throat.\nGiven that is how it is,\nYou say, why would I not wish for her to be gone\nValid question it would be, if not everyone had their flaws\nMore importantly, I'd never want to wake up to the other one.",
		"tags": ["note"]
},

{
		"title": "Taxi Rides in the Morning",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/poems/taxi-rides-in-the-morning/",
		"content": "I call him, he comes busy\nhe’s trying to reach me too / it is what they call a collision\nI tell him to wait by that tree,\nor next to the pharmacy\nmaybe across the street from last night’s door.\nHe’s usually nice, but sometimes\nI stop him from calling me ma’am,\nI think he blushes a little, maybe\nlingering on my out of place hair strands.\nWe settle in, his eyes on the mirror, the road,\nmy mind weaving a tolerable reality\nfeaturing ghosts of the past\nhe’s driving, but the destination is mine\nand, in here, it is no secret, I don’t know where that goes.\nIn this hour, we are quite alike,\nHim and I, we want the same things,\nnot to have to have this arrangement\nnot to have to wake up this early\nor drive through the city with questions on our faces.\nOf how our lives came to this,\nOf ways in which we lack,\nthings that others seem to have\nabundant, and if not, within their grasp.\nIn this hour, we wind through lanes\nlooking for directions by the light of the dawn\nenough to reach a place where the rope\naround the neck, hangs down like a pendant with a knot.",
		"tags": ["note"]
},

{
		"title": "The Man",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/poems/the-man/",
		"content": "I met a boy once\non a screen, in a beautiful paragraph\nHe said he only wrote fiction\nwith a hint of his past.\nthat he didn’t care about rhythm\nor the stuff between the lines\nKnowing him was reading a book\nhe had written anonymously\nThe kind to re read once every few months\nto find something new\nNaturally, I told him the story\nI never admitted to have\nHe listened with his eyes\nnever shifting his glance.\nHe has seen the parts of me\nI am ashamed to hide\nnever once flinching from their\nugly sight.\nI met a boy once\nin a dream, in morning daylight\nhe was writing, I was reading\na play with strange characters\nbut one.",
		"tags": ["note","poem"]
},

{
		"title": "Things I'll throw away",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/poems/things-i-ll-throw-away/",
		"content": "One day I'll throw away\nYour care wrapped around an anklet\nYour songs stuck on my phone\nClick click click\nI'll throw away the picture of your body\nBurned in my head / your presence in my room\nThe smell I caught behind your ear\nIn the middle of a dream\nOne day I'll free myself of\nParts of you in me,\nAnd parts of me that ask\nOf your well being\nOne day I'll be old, and laugh,\nReminiscing, fondly,\nOf things I did and\nDidn't do for you\nOne day I'll be able to explain\nWhy I'm still thinking of you\nWhen you'll clearly never\nHere, be.",
		"tags": ["note","poem"]
},

{
		"title": "Untitled",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/poems/untitled/",
		"content": "My life is not a curation\nof well defined breaks\nand picture perfect moments\nIt is an entanglement of\nhalf cooked ideas,\nand unwritten words\nlong lost memories and\nchildhood unlearnt.\nIt is the colloquial\nchest hair that the mosquito\ncan’t escape, a web of\nemotions and rationality\nat play.\nSomedays are raw unedited B roll\na cat purring on a sunny balcony\nOthers like a formula one race\nhours blending into millisecond cachophony.\nAnd there are the ones in between\nwhere I struggle and fall\nharder to categorise\nwould fool a machine.\nI’ve long held it as a weakness\nto be broken and show it\nto be human and mistake it\nBecause process is for books\nand as products we must pretend\nto have no exceptions or flaws\ncos if we accepted our blindspots\nwouldn’t that be a shame.\nWe’re all grainy pictures in a time of super resolution\nblind enough to see everything\nfor what it’s not\nand hide behind our own fallacies",
		"tags": ["note","poem"]
},

{
		"title": "d3 (x) radia (x) rekhta",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/projects/draft-poetry/",
		"content": "",
		"tags": ["note"]
},

{
		"title": "where is my body",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/projects/where-is-my-body/",
		"content": "Ghias, we must be careful not to teach the girls too much. How will they ever find husbands if they are too learned? The less they know, the less they will want of the outside world.\n\nWhen is abortion legal? If continuing the pregnancy involves a risk to the mother's life. Continuing pregnancy would cause grave damage to the physical or mental health of the mother. The pregnancy has been caused by rape. If the child is born, it would be gravely deformed. Any method of family planning adopted by the couple has failed.\n\nEvery woman knows that, regardless of all her other achievements, she is a failure if she is not beautiful.\n\ni like to collect sentences. it is one of the best things about owning a kindle; you can highlight! i do have a wip project (<a class=\"internal-link is-unresolved\" href=\"/notes/my-readwise\">my readwise</a>) to be able to go back to these kindle highlights.\nthe randomness of these collections of sentences is fascinating. because it is not quite random but the associations can be wild and new ones form each time you go through it again. i'm sure that i will not highlight the same things when reading something for the second time.\nit was with this fascination that i started working on wimb. i don't quite recall why i chose the body as a site to start this collection, this archive of thoughts. but the process has been very interesting. i have read a lot, i have marked a lot, i have thought about my body a lot.\nduring a short flirtation with blender, i remember thinking about making a building with rooms that represent parts of my body. (maybe i can find the handwritten notes somewhere) and the digital part of the project developed for serendipity is a combination of the same ideas. you see a bunch of doors and entering them presents you with a series of choices where you pick sentences from the archive, creating your own personal archive of choices. to be honest, both these archives are not rigorous at all. they are temporary sites of data collection with the latter not existing anywhere outside of your memory and experience. they are casual. they are destroyed and are built again. but just like going through your highlights brings back something, these sentences act as inviting hooks into the original material; material that speaks through many voices about the same subject that is the human body.\nfor the physical leg of the project i experimented with an arduino and raspberry pi setup for the first time (physical computing is fun but oh so anxiety inducing). i wanted for people to be able to engage with the archive in a more immediate manner and landed on the idea of a typewriter as a mouthpiece for the archive.",
		"tags": ["note"]
},

{
		"title": "Big Bang Nucleosynthesis",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/big-bang-nucleosynthesis/",
		"content": "Some neutrons combine with other neutrons to make more stable configurations.\nOther neutrons decay into protons.\nElectrons are not bound because of high energy.\n75% hydrogen, 25% helium\n87% protons, 13% neutrons",
		"tags": ["note"]
},

{
		"title": "Cosmic Microwave Background",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/cosmic-microwave-background/",
		"content": "Temperature of the universe cools down to 3000K. This reduces the energy of electrons so they bind to the nucleus and first atoms are created.\nPhotons become free to move around and light is observed.",
		"tags": ["note"]
},

{
		"title": "Fields",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/fields/",
		"content": "A fluid like substance\nspread everywhere in the universe\nhas a value at every point in space\nchanges over time\nFundamental building blocks of the universe are Fields\nThe best theories in physics rely on Fields rather than particles",
		"tags": ["note"]
},

{
		"title": "Heisenberg Uncertainty Principle",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/heisenberg-uncertainty-principle/",
		"content": "Conjugate variables have complementarity, which means that they cannot be measured at the same time.\nFor example, frequency and time are conjugate. To measure frequency more accurately you need to spend more time.\nIt is only possible to certainly measure one of either position or momentum of a particle.\nThis is not due to a limitation of measuring devices.\nWhen the position is known accurately, the momentum becomes uncertain and vice versa.\nUncertainty principle is explained by the mathematical fact that the wave function of momentum is the <a class=\"internal-link is-unresolved\" href=\"/notes/quantum30-fourier-transform\">Fourier transform</a> of the wave function of position.\nOne possible explanation as to why this happens in below\nto know position of something you have to shine light on it\nat quantum scales, light is made of photons which have energy and momentum\nThere are two scenarios\nsmaller wavelength light will have high energy photons\ncan get a good image Δx is low but since the photon is high energy it moves the particle and Δp becomes high\nhigher wavelength light will have low energy photons\nwill get a blurry image Δx is high but since the photon is low energy it doesn't move the particle and Δp becomes low",
		"tags": ["note"]
},

{
		"title": "Quantum Circuits",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-circuits/",
		"content": "The simplest quantum circuit is the Quantum Wire\nSystems which make good quantum wires are difficult to build quantum gates for.\nOne of these systems is a <a class=\"internal-link \" href=\"/quantum30/neutrino/\">neutrino</a>",
		"tags": ["note"]
},

{
		"title": "Quantum Entanglement",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-entanglement/",
		"content": "Two particles interact with each other and get linked in a manner that measuring one particle allows us to instantaneously know what the other particle will be irrespective of the distance between them\nEinstein (EPR) thought the particles had hidden variables and called this spooky action at a distance. But since then it has been shown through experiments based on the <a class=\"internal-link is-unresolved\" href=\"/notes/bell-inequality-test\">Bell inequality test</a> that this is not true and non locality exists.\nAfter entanglement, the particles do not remain distinct entities and are described by the same wave function. So it makes no sense to theorize that they are communicating across a distance.",
		"tags": ["note"]
},

{
		"title": "Quantum Field Theory",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-field-theory/",
		"content": "A theory that combines Quantum Mechanics with Faraday's idea of <a class=\"internal-link \" href=\"/quantum30/fields/\">Fields</a>",
		"tags": ["note"]
},

{
		"title": "Quantum Logic Gates",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-logic-gates/",
		"content": "Not gate / X gate\nNOT|0⟩=|1⟩NOT|1⟩=|0⟩NOT(a|0⟩+b|1⟩)=b|0⟩+a|1⟩X=[0110]Hadamard gate / H gate\nby expanding the range of states that we can access, beyond what is possible on a classical computer, it becomes possible to take shortcuts in our computation\n\nH|0⟩=|0⟩+|1⟩2H|1⟩=|0⟩−|1⟩2H(α|0⟩+β|1⟩)=α(|0⟩+|1⟩2)+β(|0⟩−|1⟩2)=α+β2|0⟩+α−β2|1⟩H=12[111−1]cancellation of |1⟩ and reinforcement of |0⟩\nH(H|0⟩)=H(|0⟩+|1⟩2)=12(|0⟩+|1⟩2)+12(|0⟩−|1⟩2)=12(|0⟩2+|0⟩2)=|0⟩",
		"tags": ["note"]
},

{
		"title": "Quantum State",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-state/",
		"content": "The state of a <a class=\"internal-link \" href=\"/quantum30/qubit/\">qubit</a> is a vector of unit length in 2D complex vector space called state space\nThere are two basis states |0⟩ and |1⟩ and several superposition states for eg. 0.6|0⟩+−0.8|1⟩\nQ. What is the meaning of the quantum state",
		"tags": ["note"]
},

{
		"title": "Quantum tunnelling",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/quantum-tunnelling/",
		"content": "Particle have a probability to move (are they actually moving?) through a barrier, given the barrier is thin enough.\nNuclear fusion in the sun, when two hydrogen molecules combine to produce helium, happens with quantum tunnelling.",
		"tags": ["note"]
},

{
		"title": "Stern-Gerlach Experiment",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/stern-gerlach-experiment/",
		"content": "",
		"tags": ["note"]
},

{
		"title": "computers are a fundamental feature of the universe",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/computers-are-a-fundamental-feature-of-the-universe/",
		"content": "David Hilbert\nis there an algorithm to find out if a mathematical theorem is provable\nAlan Turing\nthere is a general purpose computing device that can follow any algorithm\nDavid Deutsch\nIs there a (single) universal computing device which can efficiently simulate any other physical system?",
		"tags": ["note"]
},

{
		"title": "day 1",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-1/",
		"content": "Today will be the first day of this one month long learning challenge.\nInitially I had thought of using substack for publishing my daily learning notes, but obsidian seems like a much better idea for further refinement and continued learning.\nA list of interesting points\n\nHumans are a mathematical anomaly[1]\n\ndo we romanticise being made of stardust? short answer, yes.\n\nsingularity is a tricky concept. highly possible for it not to exist.\nthere is a smallest unit of time. one Planck time.\ngrand unified force is a khichdi of electromagnetic, gravitation, weak and strong force.\n\nwhat is the naming convention being weak and strong forces?\n\nInformation cannot travel faster than light but space can.\n\n<a class=\"internal-link is-unresolved\" href=\"/notes/causality\">causality</a>\n\nwhere does mass come from\n\nHiggs Field being massless vs gaining non zero potential\n\nThere are more particles than anti particles\n\nthis is a huge reason for why the universe is the way it is\n\n<a class=\"internal-link \" href=\"/quantum30/big-bang-nucleosynthesis/\">Big Bang Nucleosynthesis</a>\n<a class=\"internal-link \" href=\"/quantum30/cosmic-microwave-background/\">Cosmic Microwave Background</a>\nQuantum mechanics predicts all the elements in the periodic table[2]\n\nFootnotes\n\nhttps://www.youtube.com/watch?v=YCQPw9pbZnk ↩︎\n\nhttps://www.youtube.com/watch?v=tq_y1qOmUBE ↩︎",
		"tags": ["note"]
},

{
		"title": "day 2",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-2/",
		"content": "I started to read Quantum Country today. I think it is a much better resource for me compared to watching videos. It is also quite an interesting approach to learning so I am looking forward to progressing with it.\nThings noted from today's videos\n\n<a class=\"internal-link is-unresolved\" href=\"/notes/deterministic-world\">Deterministic world</a> vs <a class=\"internal-link is-unresolved\" href=\"/notes/probabilistic-world\">Probabilistic world</a>\nMeasurement collapses the wave function\n\nIt is not actually known how this happens\n\nSuperposition and the double slip experiment\n<a class=\"internal-link \" href=\"/quantum30/quantum-entanglement/\">Quantum Entanglement</a>\n<a class=\"internal-link \" href=\"/quantum30/quantum-tunnelling/\">Quantum tunnelling</a>\n<a class=\"internal-link \" href=\"/quantum30/heisenberg-uncertainty-principle/\">Heisenberg Uncertainty Principle</a>\n<a class=\"internal-link \" href=\"/quantum30/computers-are-a-fundamental-feature-of-the-universe/\">computers are a fundamental feature of the universe</a>\n<a class=\"internal-link \" href=\"/quantum30/qubit/\">qubit</a>",
		"tags": ["note"]
},

{
		"title": "day 3",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-3/",
		"content": "I was planning to make some progress with Quantum Country today as well but then I got hit with some biology happening in my uterus so could not proceed. But here are a few observations from today\n\n<a class=\"internal-link \" href=\"/quantum30/quantum-field-theory/\">Quantum Field Theory</a>\nThere are 3 fundamental particles ( well 12 actually )\n\nlightest\n\nheaviest\n\nelectron\nmuon\ntau\n\n<a class=\"internal-link \" href=\"/quantum30/neutrino/\">neutrino</a>\nmuon quark\ntau quark\n\nup quark\nstrange quark\nbottom quark\n\ndown quark\ncharm quark\nup quark\n\nforces\nfields\n\ngravity\nspace time\n\nelectro magnetic\nelectro magnetic\n\nstrong force (holds together nucleus)\ngluon field\n\nweak force (radioactive decay)\nw z bozon field\n\nhiggs particle\nhiggs field (responsible for mass)\n\nproton is 2 up quarks and 1 down quark\nneutron is 2 down quarks and 1 up quark\nVacuum is made of fields - Quantum Vacuum Fluctuations\nIdeas of unification\n\nGrand Unified Theory\nSuper symmetry\nString theory",
		"tags": ["note"]
},

{
		"title": "day 4",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-4/",
		"content": "Today started with Quantum Country and then I moved on to the videos for today. And I have to say that combining both of these resources has been interesting but I am also realising that it seems like I am making more steady progress with Quantum Country rather than the videos.\nhere it goes\n\n<a class=\"internal-link \" href=\"/quantum30/quantum-state/\">Quantum State</a>\n<a class=\"internal-link \" href=\"/quantum30/quantum-logic-gates/\">Quantum Logic Gates</a>\n<a class=\"internal-link \" href=\"/quantum30/quantum-circuits/\">Quantum Circuits</a>\nSchrodinger was a polygamist. When he decided to derive the Wave Function, he moved to a cabin, without his wife/s and was surrounded by young women. In this period of a few months, he produced the four influential papers.",
		"tags": ["note"]
},

{
		"title": "day 5",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-5/",
		"content": "<a class=\"internal-link \" href=\"/quantum30/stern-gerlach-experiment/\">Stern-Gerlach Experiment</a>\n<a class=\"internal-link \" href=\"/quantum30/heisenberg-uncertainty-principle/\">Heisenberg Uncertainty Principle</a>",
		"tags": ["note"]
},

{
		"title": "day 8",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-8/",
		"content": "I am finding that the end of first week and the beginning of second week has not been as enthusiastic for me as it was initially. To some extent, I am failing to connect with the material as much and the fact that all of it is in video format does not help. There seems to be this illusion of understanding something but I feel like I actually don't, and if someone were to dig deeper they would realise that the foundation for all this new information doesn't exist.\nAnyway, I think that is why this has taken me quite some time to get back to, but get back we shall.\n\nHadamard Gate -&gt; <a class=\"internal-link \" href=\"/quantum30/quantum-logic-gates/\">Quantum Logic Gates</a>\n<a class=\"internal-link \" href=\"/quantum30/quantum-entanglement/\">Quantum Entanglement</a>",
		"tags": ["note"]
},

{
		"title": "day 9",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/day-9/",
		"content": "Today's videos were quite low on information. And since I am already continuing with Quantum Country, a lot of the information that was delivered, I already knew.\nThere were two key takeaways though which I will list here and then pull into other notes at some later point in time\n\nAs the size of transistors gets smaller, there is a chance for them to stop working in the intended manner since electrons start exhibiting the phenomenon of <a class=\"internal-link \" href=\"/quantum30/quantum-tunnelling/\">Quantum tunnelling</a>. This is a key reason why people began thinking of building Quantum computers (?)\nQuantum computers are not a replacement for classical computers.\n\nEvery operation on a quantum computer is not faster.\nCertain kinds of problems are easier to solve with quantum computers since it takes an exponentially smaller number of steps to solve compared to classical computers.",
		"tags": ["note"]
},

{
		"title": "quantum30",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/index/",
		"content": "daily entries\n\n<a class=\"internal-link \" href=\"/quantum30/day-1/\">day 1</a>\n<a class=\"internal-link \" href=\"/quantum30/day-2/\">day 2</a>\n<a class=\"internal-link \" href=\"/quantum30/day-3/\">day 3</a>\n<a class=\"internal-link \" href=\"/quantum30/day-4/\">day 4</a>\n<a class=\"internal-link \" href=\"/quantum30/day-5/\">day 5</a>\n<a class=\"internal-link \" href=\"/quantum30/day-8/\">day 8</a>\n<a class=\"internal-link \" href=\"/quantum30/day-9/\">day 9</a>",
		"tags": ["note"]
},

{
		"title": "neutrino",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/neutrino/",
		"content": "A fundamental particle that does not interact with other types of matter.\nIt is a really good option for making quantum wire (see <a class=\"internal-link \" href=\"/quantum30/quantum-circuits/\">Quantum Circuits</a>) but because of the same property, it becomes really difficult to design <a class=\"internal-link \" href=\"/quantum30/quantum-logic-gates/\">Quantum Logic Gates</a> for it which can manipulate its' state in a controlled manner.",
		"tags": ["note"]
},

{
		"title": "qubit",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/quantum30/qubit/",
		"content": "quantum version of a bit\n|0⟩:=[10]|1⟩:=[01]",
		"tags": ["note"]
},

{
		"title": "what is a digital garden",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/what-is-a-digital-garden/",
		"content": "But before that; why do I have a website?\nFor one, I am not someone who has a lot of thoughts worth publicly writing about. And while I certainly enjoy documenting things[1], more often than not, I struggle with words.\nThis website began, like a lot of things do with me, as a way of measuring progress; specifically, trying to learn how to write fragment shaders by making tiny shaders and then explaining the process as best I could by writing a small article[2]. Sadly though, I never got quite far with that series, and after <a class=\"internal-link \" href=\"/writings/chess-board/\">chess board</a>, <a class=\"internal-link \" href=\"/writings/texture-land/\">texture land</a>, and <a class=\"internal-link \" href=\"/writings/mondrian/\">mondrian</a>, I continued to write more shaders but never got around to writing another article.\nThen sometime in January 2022, I decided to redesign my website every year on twitter and the current version is a continuation of this exercise with some major structural redesigns and less important visual ones[3]. It started with wanting a better workflow for writing to help me think better, and the idea of building a digital garden [4][5] really stuck with me. I am giving myself the space to not agonise over every single word and how it may sound to an external audience, and instead use writing as a way to consolidate floaty bits of thoughts that I sometimes happen to have.\nLet me then make an incomplete list of things this garden might have\n\nnotes about current projects\nhalf cooked slash uncooked ideas for new projects\nrationalizing slash historical bits, like this one, about why I do certain things\nunasked for opinions\njokes in footnotes\nmore jokes than references in footnotes\nmore incomplete lists\nlists saying &quot;lists are fun but totally pointless&quot;\n<a class=\"internal-link is-unresolved\" href=\"/notes/on-art-made-with-software\">on art made with software</a> poems\n\nupdate - 30/05/2023\nI have not been writing a lot or taking notes. This website is almost turning out to be just like the previous ones where I engage with it only rarely. I want to stop that and write more often even if it doesn't make sense. I want to tend to this garden. So I will try to make a habit to do this whenever I am consuming some media and integrate them into the garden at the end of the day or whenever feels right for a few seconds.\n\nPCD India is a community of creative coding enthusiasts, tech artists, designers, live coders, data nerds, musicians, architects, paper engineers and artists whose practices contain these and more elements. We are a group of enthu cutlets who love experimentation and sharing, come hang out! https://processingindia.com/2021 ↩︎\n\nMy first article <a class=\"internal-link \" href=\"/writings/hello-shader/\">hello shader</a> literally begins with a cheerful 'Hey!' haha ↩︎\n\ncos who likes to write css revisions in the first month of a new year; not me. yes, I will continue to use footnotes for silly jokes. ↩︎\n\nhttps://maggieappleton.com/garden-history ↩︎\n\nhttps://nesslabs.com/digital-garden-set-up ↩︎",
		"tags": ["note","gardenEntry"]
},

{
		"title": "Let's make a Chess Board",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/writings/chess-board/",
		"content": "It has been quite some time, a bit over two months(!) since I last wrote an article. But let's stop beating ourself over it, maybe that's how we'll get to writing more of these. In fact an exciting update is that I've sort of made myself a shader curriculum, and by no way is this covering everything. But I am hoping that if I can give this enough time in a week, I can get to be more consistent with the project of learning about shaders! 🎉\nThis time I thought I'll try to do something simple i.e. make a chess board to pratice using some important glsl functions like fract and step. This is going to be the smallest shader that I have written an article on thus far. But the idea is to make this into a series and make an actual chess board with all it's pieces, and everything, using (hopefully) just shaders!\nAlso a last thing before we can get into it. I have changed my workflow and now instead of using glsl-canvas, I have started using glslViewer made by the amazing Patricio Gonzalez, who is also one of the writers of the book of shaders. I found that I could do much more things with glslViewer like including other glsl files and using textures, in a much simpler fashion, so I am going to stick to this. Nevertheless the current example can be done inside glsl-canvas too.\nWhat are we waiting for?\nLet's start by writing the boilerplate stuff, making our uniforms, and setting a 🔴 color to gl_FragColor to begin with.\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\ngl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n\nAnd now if we start deconstructing a chess board, it is basically made of white and black squares alternating each other in a two dimensional fashion. Since we need a bunch of these squares, we will have to expand our coordinates st, which currently is in the range 0-1 by multiplying it with some factor to convert it into 0-factor.\nvec2 grid = st*5.0;\n\nWe can now try to convert this into alternating black and white columns by using step\nfloat cols = step(0.5, grid.x);\n\nThis won't look right because our space ranges from 0-factor and we'd like it to be in columns of 0-1 lined next to each other to be able to use step\n\nBehold fract 👇\nfloat cols = step(0.5, fract(grid.x));\n\nNow we figure we just need to repeat this process for rows and we've got it right?\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nvec2 grid = st*5.0;\nfloat cols = step(0.5, fract(grid.x));\nfloat rows = step(0.5, fract(grid.y));\n\nvec3 board = vec3(rows+cols);\ngl_FragColor = vec4(board, 1.0);\n}\n\nOf course it could not be this simple, now could it. If you play with the rows and cols and see what is in them individually, you'll realise that they don't line up in the way we want them. And so multiplying rows and cols also does not help.\nI tried a few combinations of these but since they didn't work (maybe there are some I didn't think of, so let me know if you do!) I thought of trying to modify cols such that alternate rows have it shifted a bit.\nfloat rows = step(0.5, fract(grid.y)) == 0.0 ? 0.2 : 0.0;\nfloat cols = step(0.5, fract(grid.x + rows));\n\nTo break this down a bit, the first line uses a ternary operator which is a shortform for an if statement or a way for us to make a decision based on outcome of a condition. We could also rewrite it as\nfloat rows = 0.0;\nif(step(0.5, fract(grid.y)) != 0.0) {\nrows = 0.2;\n}\n\nSo each alernate row seems to be shifting to the left by 0.2 because we have incorporated this value into constructing our columns by modifying it's coordinate system. You can play with this by manually changing the value of rows and adding it to grid.x and seeing what that does.\nAnd tada 🎉, by changing 0.2 to 0.5, we have our chess board!\n\nThere is a whole bunch to explore with these patterns, so please change values wherever you like and make new ones 🎨 Hoping to come back soon with chess pieces(or start simpler, go pieces xD)\nUntil then &lt;insert Bob Ross saying god bless my friends&gt;",
		"tags": ["note","shader","drawing","2021","june"]
},

{
		"title": "Hello Shader!",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/writings/hello-shader/",
		"content": "Hey! Yes since I have never written for THE Web before this is how I'll start. This is probably not going to be very good since aforementioned haha but hopefully if you are as new to shaders as I am, and are learning them yourself, you might find something of value in here.\nThis article is the start of a series of articles that I plan on writing about shaders while learning how to write them. Documenting the learning process in this way will hopefully help me understand what areas I have covered, where I feel comfortable, and which parts I should focus on next. I've always been someone who starts something but never really gets around to finishing it, and so I hope that I can finally end that with these articles and have more understanding after, let's say a month, of where I was and where I am headed(@kayserifserif, thank you for the inspiration!)\nAand it's shader time\nToday I will be going through a shader I wrote to recreate an old sketch made in Processing.\n\nThe Processing code uses an Eye class and some vector math that I thought was a bit overkill for the idea of the sketch, which is to have two circles, one inside the other, with the inner circle responding to mouse movement, and sort of imitate human eyes 👀\nTo try out this shader and experiment with your own, it is very simple and easy to use an extension in VSCode, there is hardly any setup required and you'll be able to see the output right inside your editor with changes being reflected as you type them. I have been using glsl-canvas but there are a few others as well.\nFor our simple purposes we only need to know how to make circles and make them move using glsl. If you haven't already heard of the Book of Shaders, leave this simple minded article right now and head over there because I could never be as succint and amazing in explaining the smallest details or big picture ideas about shaders, and the site is just beautiful. 🖤 But if you already know a bit about Fragment Shaders, you'll know that we need a main function, some necessary directives and uniforms and a function to make a circle to begin with.\nThe circle function takes as its input a vector describing the coordinate space of the canvas, a vector for the center of the circle in this coordinate space and a radius value. We're drawing the circle based on the distance between each pixel and the center of the circle. So a color will be calculated for each pixel based on how far it is from the center of the circle. I referred the Book of Shaders shaping page myself because this part is not always easy to understand and it takes a lot of time and practice to develop the intuition that'll let you write amazing shaping functions in glsl. Bless us all, Mr Miyagi!\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat circle(vec2 _st, vec2 _pos, float _radius) {\nvec2 dist = _pos-_st;\ndist *= 0.5;\nfloat val = smoothstep(_radius-0.01, _radius+0.01, dot(dist,dist)*4.0);\nreturn val;\n}\n\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\ngl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n\nBut for now, since we are not using the circle function inside main you should only see red if you run this shader. On with circles, now ⚫⚪🔴\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nfloat c = 1.0-circle(fract(st*2.0), vec2(0.5), 0.2);\n\ngl_FragColor = vec4(vec3(c), 1.0);\n}\n\nYou might be wondering what is this fract business we've got going here and so I will try to explain. Inside our shader the coordinate space, i.e. st lies between 0.0 and 1.0 since we are normalizing using the resolution of the screen, u_resolution. fract is a glsl function that returns the fractional value of any number. I am using it here to be able to draw more than one circle while only using vec(0.5) as the location for all the circles. The subtraction in the beginning is to reverse the color of circle and background.\nTo make the smaller circle within the bigger circle, we'll call the circle function again, giving it the same coordinate space and a smaller radius, but we don't want it to be stationary. Let's set the location as a function of the uniform u_time. We want the small circle to move in a circle(yay circles!), so by using u_time as our angle, we can calculate the x and y location\nx = cos(u_time) * radius\ny = sin(u_time) * radius\n\nFinally we will add 0.5 as an offset to center the smaller circle within the big circle. When finally setting gl_FragColor in the last line, we will multiply the values for both circles. This would be equivalent to an and operation, in shader terms, combining both the results. Also notice how we subtract from 1.0 with only the bigger circle and not the smaller one. You could try playing with this to get a better feel for how things are working.\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nfloat c = 1.0-circle(fract(st*2.0), vec2(0.5), 0.2);\n\nfloat smallc_len = 0.25;\nvec2 smallc_pos = vec2(cos(u_time)*smallc_len, sin(u_time)*smallc_len)+0.5;\nfloat smallc = circle(fract(st*2.0), vec2(smallc_pos), 0.1);\n\ngl_FragColor = vec4(vec3(c*smallc), 1.0);\n}\n\nThe only thing remaining now is to add mouse interaction 🐁 since we don't want all the circles looking in the same direction, which is what happens if we use any uniform as that value would be the same for all our pixels.\nFor this we'll first normalise the uniform u_mouse just like we normalised the coordinates. And then make a vector starting from the pixel position pointing towards the mouse. We can now use this vector to calculate an angle using inverse tangent.\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nvec2 m = u_mouse.xy/u_resolution.xy;\n\nvec2 dir = m-st;\nfloat dirangle = atan(dir.y, dir.x);\n\nfloat c = 1.0-circle(fract(st*4.0), vec2(0.5), 0.2);\n\nfloat smallc_len = 0.25;\nvec2 smallc_pos = vec2(cos(dirangle)*smallc_len, sin(dirangle)*smallc_len)+0.5;\nfloat smallc = circle(fract(st*4.0), vec2(smallc_pos), 0.1);\n\ngl_FragColor = vec4(vec3(c*smallc), 1.0);\n}\n\nAnd if we just plug this angle into our smaller circles, tada, we have our shader!\n\nIf you have something to share, thoughts about this article, or any mistakes that you thought were made(very probable), please feel free to reach out to me on Instagram, link in footer. 💃 That's all for this time, hopefully there will be more soon.",
		"tags": ["note","shader","2021"]
},

{
		"title": "Shall we fail at making a Mondrian!",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/writings/mondrian/",
		"content": "I recently saw a documentary about Mondrian and although the images of his paintings in the video were of not the best quality and there is an annoying watermark throughout, dare I say I maybe understood what Mondrian was trying to say. Having recently come across Vasudeo Gaitonde and S H Raza, I have come to appreciate color much more and how the right amount in the right places could really be something. Black and white is evergreen (sorry 😂) but imagine a world without color.\nA bit of history\n\nPiet Mondrian, whose father was a drawing teacher and whose mother we don't find much about (but she also probably did something) was introduced to art and painting since a very young age. He also had an uncle with whom he painted often and after getting a degree in Fine Arts became qualified to teach but his career was to become a tad bit bigger than that.\n\nHe was inspired by Cubism and Pablo Picasso and the Paris avant-garde scene at the time and it started reflecting in how he painted. Due to World War I, he was stuck back home, and could not return to Paris, and it was during this time that he met fellow artists, Bart van der Leck and Theo van Doesburg, and with Doesburg started a magazine called De Stijl and in it publishing essays about why he painted the way he painted.\n\nHis thinking was based on his belief in Theosophy and in his words, he wanted to articulate a mystic conception of cosmic harmony that lay behind the surfaces of reality.\nI am not quite sure what it is about these paintings that interests me but as someone who has been aiming for brevity in the things that I make, I decided to make myself a Mondrian! 🎉\nOn with it now\nAs always, we will begin with our boilerplate, define our colors, and start with a nice bright red to soothe the eye.\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\n#include &quot;../lygia/generative/random.glsl&quot;;\n#include &quot;../lygia/generative/cnoise.glsl&quot;;\n\n#define RED vec3(1.0, 0.0, 0.0)\n#define YELLOW vec3(1.0, 1.0, 0.0)\n#define BLUE vec3(0.0, 0.0, 1.0)\n#define WHITE vec3(1.0, 1.0, 1.0)\n\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\ngl_FragColor = vec4(RED, 1.0);\n}\n\nWhat we have also done here is include two other glsl files, and those of you familiar with some c programming would have seen this before, but even if you haven't, it is nothing scary. This is a simple straightforward way to use functions and code from another file, by doing exactly what it says, including them at the beginning of our own code. What comes after #include is a file path, relative to the location of your current shader. And so for me, lygia is in the folder outside the folder I am in now, like so\n\nAnd just to take a little space to gush about lygia, it is a wonderful library with a whole lot of functions ranging from drawing shapes to manipulating color and space. It is created by Patricio Gonzalez Vivo, also one of the co authors of the book of shaders and the creator of glslViewer ❤️ Honestly, where would I be if not for these amazing tools and resources! ✨️\nWith lygia, as you can probably figure, it is much simpler to now have access to functions like noise and random, which we would have originally had to copy paste inside our shader. About the #include, it did not work in the vscode extension glsl-canvas last time I checked so you may want to go ahead and install glslViewer 👩‍💻\nNow what characterizes a Mondrian are the straight lines, horizontal and vertical and the three primary colors 🔴🌕🔵 which are the only elements that he thought were necessary. Even diagonals are not allowed, and side note, he cut away from Theo van Doesburg after a disagreement on this exact subject.\nSo we figure we need to construct a grid in a somewhat non regular manner and then start filling the boxes of the grid with color. Atleast that is what we will try to do. 🙌\nGrid up\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nfloat size = 5.0;\n\nvec2 grid = st;\ngrid.x *= cnoise(vec2(st.x))*size;\ngrid.y *= cnoise(vec2(st.y))*size;\n\nfloat rows = step(0.5, fract(grid.y)) == 0.0 ? 0.5 : 0.0;\nvec3 cols = vec3(step(0.5, fract(grid.x + rows)));\n\ngl_FragColor = vec4(cols, 1.0);\n}\n\nTo make the grid, we can pick up from where we left in the last article and expand our space st but this time using cnoise, an implementation of classic perlin noise from the lygia library, to create non regularity in a controlled manner. cnoise takes in a vec2, so now grid would range between 0-size in both directions, and this way also produced a symmetry along the x axis. There must be tons of other, probably better ways to get non uniform grids but we will stick with this for now.\n\nFill in the color\nNow that we have our black and white grid, we can move on to adding color. We are going to use a glsl function called mix which can be used for many things but, from what little glsl code I have seen, it is usually used to transition smoothly between colors based on a function.\nTo start, we need to select rectangles from this grid and then fill them with 🔴, 🌕, or 🔵. To give a random gray color to parts of a grid we can do something like so\nfloat random_c = floor(grid.x + rows)/size;\n// vec2 random_c = floor(vec2(grid.x + rows, grid.y*2.0))/size;\ncols = vec3(random(random_c));\n\nThis chooses a random float based on grid.x+rows which is essentially our columns, and same values of rgb give it the color between white and black that we see. Again, this is just one of the ways to do this, because as the title says, we are going to fail to make a Mondrian so go ahead and comment out the second line and use that if you like!\nWe will do this process three times for our three colors, and then mix in those colors with a white background based on the values that we'll get.\nvec3 colorf = vec3(0.0);\ncolorf.x = step(0.0, random(random_c));\ncolorf.y = step(0.1, random(random_c));\ncolorf.z = step(0.4, random(random_c));\n\ngl_FragColor = vec4(colorf, 1.0);\n\nWith the step function, we are splitting the random space from random(random_c) into two parts, like colored/not colored, and red/not red and so forth. You can try tweaking the first value in step function and see the change that it makes.\nNow using these values we will finally start mixing in the colors that we want 🎨 The mix function in glsl takes three arguements, the first two of which are the colors to be mixed, and the third is the function which mixes them. So if we say mix(WHITE, BLACK, 0.0) we would get the color WHITE and mix(WHITE, BLACK, 1.0) would give us BLACK. We can also do this iteratively by mixing further into the color that we get in a previous step like so.\nvec3 color = WHITE;\ncolor = mix(color, RED, colorf.x);\ncolor = mix(color, YELLOW, colorf.y);\ncolor = mix(color, BLUE, colorf.z);\n\ngl_FragColor = vec4(color, 1.0);\n\nFor a much detailed and thorough explanation do check the color chapter from the book of shaders. Our code above makes sure that only these three colors fill different parts of the grid and not any other color combinations.\n\nAs an extra exercise we can also try outlining all the grid cells that we have, again using the step and mix functions. Doing the outlining before the colors would hide it, just like if we were doing it on paper, so we will add it in the end.\nvec2 outline = step(0.1, fract(vec2(grid.x + rows, grid.y*2.0)));\nvec3 color = WHITE;\ncolor = mix(color, RED, colorf.x);\ncolor = mix(color, YELLOW, colorf.y);\ncolor = mix(color, BLUE, colorf.z);\ncolor = mix(color, 1.0-WHITE, 1.0-outline.y);\ncolor = mix(color, 1.0-WHITE, 1.0-step(0.1, fract(grid.y*2.0)));\ncolor = mix(color, 1.0-WHITE, 1.0-outline.x);\n\nAnd that's it, we'll stop here but there are tons of ways this can go further like using the uniform u_time and incorporating it in constructing our grid so the grid could move.\nHere are a few things I made, hope you have fun making yours 💃👏",
		"tags": ["note","shader","drawing","2021","july"]
},

{
		"title": "Texture land",
		"date":"Thu Oct 12 2023 13:59:28 GMT+0000 (Coordinated Universal Time)",
		"url":"/writings/texture-land/",
		"content": "This is definitely not a week after the last article. And I think a part of the reason is because I haven't been studying shaders consistently. But hey, I'm back here, and so that is a good sign right? I hope it is. So today I want to talk about textures and make a simple shader that pixelates an image.\nWhat is a texture you say\nSimply put, texture is shader speak for image. When getting introduced to texture, and even during this article you will come across the term texture coordinates as well. Now this concept does not have a counterpart with respect to images, but it becomes inseparable from textures when it comes to shaders. If you have a texture, you must have texture coordinates.\nAnd this is the way it is because shaders have the capability to wrap a texture around 3D objects and in other ways as well. That is, you can use an image to cover a 3D model, for example a cylinder, in any number of ways you can imagine. To specify which part of an image goes where on a 2D plane or a 3D object, we need texture coordinates. This will become more clear as you use them yourself in a bit.\nWhat are we waiting for\nSo to begin, let's write all the simple boilerplate that we need for our shader, and you should see a red screen.\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform sampler2D u_texture_0;\n\nvoid main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n\nYou must have noticed that we have an extra uniform of type sampler2D, and this is our texture/image. If you are using glsl-canvas on VSCode then you can define your texture location in the settings.json file of your current workspace and will have to use the name u_texture_0 for the uniform. For more information on how to do this, you can look into the Textures section on the extension page.\nBut we are not done yet displaying our image, since we are not using the texture inside the shader at all yet. So let's go ahead and do that.\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\nvec4 tex = texture2D(u_texture_0, st);\n\ngl_FragColor = tex;\n}\n\nTo use a texture inside a shader, the function that glsl provides us is called texture2D. The first parameter for this function is the texture uniform and the second parameter is.. yes you guessed it, texture coordinates!\n\nSide note: as you can probably tell from the code, texture coordinates usually range from 0 to 1 although this might not be so in some cases. But it would be safe to assume the range 0-1 for most cases.\nPPiixxeellaattee\nNow that we can display an image inside a shader, let's move to the next step and pixelate it. For doing this, do you think we should modify the texture coordinates, i.e. how we get pixels from an image, or the image after we get it using simple texture coordinates. Let's first try using the first approach.\nAnd to get to that we'll first explore how to make a grid using a shader.\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\n\nvec2 tex_coord = st;\nvec4 tex = texture2D(u_texture_0, tex_coord);\n\nfloat grid = random(floor(st*10.0));\n\n// gl_FragColor = tex;\ngl_FragColor = vec4(vec3(grid), 1.0);\n}\n\nIf we try to unpack this line which defines our grid, we can see that we are first upscaling or zooming out by multiplying st with a float value and then flooring the space to get floored values like 0.0, 1.0, 2.0, 3.0, 4.0... This flooring operation essentially divides our entire space into a grid. When picking randomly from this floored grid, we start to get closer to our idea of pixellation.\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\n\nvec2 tex_coord = st;\nvec4 tex = texture2D(u_texture_0, tex_coord);\n\nvec2 grid = floor(st*10.0)/10.0;\n\n// gl_FragColor = tex;\ngl_FragColor = vec4(vec3(grid.x, grid.y, 0.0), 1.0);\n}\n\nSide note: If you are wondering, like I was, how floor operation differs from fract operation, try and substitute!\nGrid + texture = ?\nSince we have all the ingredients for our recipe, let's plug them into action and see what happens!\nvoid main() {\nvec2 st = gl_FragCoord.xy/u_resolution.xy;\n\nfloat deg = 4.0;\nvec2 grid = vec2(random(floor(st*deg)));\n\nvec2 tex_coord = st+grid;\nvec4 tex = texture2D(u_texture_0, tex_coord);\n\ngl_FragColor = tex;\n}\n\nOops what are these weird lines, we don't want those? Let us go back to what we said about texture coordinates. They range from 0 to 1, and since we are adding two vectors to each other, is it not possible for them to exceed this range..? What if we take only the fractional part of the resulting vector?\nvec2 tex_coord = fract(st+grid);\n\nVoila, we've done it!\n\nYou can now try playing around with these different values, maybe change how you want to define the deg of pixelation.\nHere are a few things I got while messing around.\n\nThese looked much better in motion, but I haven't yet figured out how to use videos with Gatsby xD. You can try playing with motion as well by using the u_time uniform.\nSo until next time, which will hopefully be sooner, have fun! 💃",
		"tags": ["note","shader","texture","2021","april"]
}
]
